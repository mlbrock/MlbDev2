// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// MLB Utility Library Include File
// ////////////////////////////////////////////////////////////////////////////
/*
   File Name         :  ParseLine.hpp

   File Description  :  Include file for line-feed terminated parsing.

   Revision History  :  2024-12-28 --- Creation.
                           Michael L. Brock

      Copyright Michael L. Brock 2024.
      Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
      http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

#ifndef HH__MLB__Utility__ParseLine_hpp__HH

#define HH__MLB__Utility__ParseLine_hpp__HH 1

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/**
   \file ParseLine.hpp

   \brief   The line-feed terminated parsing header file.
*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <Utility/Utility.hpp>

#include <string_view>

// ////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace Utility {

// ////////////////////////////////////////////////////////////////////////////
class ParseLineState
{
public:
	ParseLineState(std::string_view src_data_);
	ParseLineState(const std::string &src_data_);

	bool IsEnd() const;

	std::size_t GetLineIndex() const;
	std::size_t GetLineOffset() const;
	std::size_t GetCurrentOffset() const;

	std::string_view ParseLineSingle();

private:
	std::string_view src_data_;
	std::size_t      line_index_;
	std::size_t      line_offset_;
	std::size_t      current_offset_;
	bool             at_end_flag_;
};
// ////////////////////////////////////////////////////////////////////////////

} // namespace Utility

} // namespace MLB

#endif // #ifndef HH__MLB__Utility__ParseLine_hpp__HH

