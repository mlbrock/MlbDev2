// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// MLB MFStore Library Include File
// ////////////////////////////////////////////////////////////////////////////
/*
   File Name         :  MMapStorage.hpp

   File Description  :  Include file for the MMapStorage library.

   Revision History  :  2021-02-14 --- Creation.
                           Michael L. Brock

      Copyright Michael L. Brock 2021 - 2024.
      Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
      http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

#ifndef HH__MLB__MFStore__MMapStorage_hpp__HH

#define HH__MLB__MFStore__MMapStorage_hpp__HH 1

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/**
   \file MMapStorage.hpp

   \brief   Include file for the MMapStorage library.
*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
// Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <Utility/GranularRound.hpp>

#include <cstdint>

// ////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace MFStore {

// ////////////////////////////////////////////////////////////////////////////
typedef uint64_t MFStoreOff;
typedef uint64_t MFStoreLen;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
constexpr MFStoreLen MFStoreAllocGran = 65536ULL;
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
inline MFStoreLen FixUpStorageGran(MFStoreLen store_gran)
{
	if (store_gran < MFStoreAllocGran)
		store_gran = MFStoreAllocGran;
	else if (store_gran % MFStoreAllocGran)
		store_gran =
			MLB::Utility::GranularRoundUp(store_gran, MFStoreAllocGran);

	return(store_gran);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
inline MFStoreLen FixUpValueGran(MFStoreLen src_value, MFStoreLen store_gran)
{
	return(MLB::Utility::GranularRoundUp(src_value,
		FixUpStorageGran(store_gran)));
}
// ////////////////////////////////////////////////////////////////////////////

} // namespace MFStore

} // namespace MLB

#endif // #ifndef HH__MLB__MFStore__MMapStorage_hpp__HH

